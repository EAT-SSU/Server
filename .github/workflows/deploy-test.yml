name: Develop 브랜치 CI/CD 테스트

on:
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  test-develop-cicd:
    runs-on: ubuntu-latest
    steps:
      - name: 소스 코드 체크아웃
        uses: actions/checkout@v3

      - name: JDK 17 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle 캐싱
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: application.yml 생성
        run: |
          echo "spring:
            profiles:
              include: dev" > ./src/main/resources/application.yml
        shell: bash

      - name: gradlew 실행 권한 부여
        run: chmod +x gradlew

      - name: Gradle 빌드
        run: ./gradlew clean build -x test

      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker 이미지 빌드 및 푸시
        run: |
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/eatssu-dev .
          docker push ${{ secrets.DOCKER_REPO }}/eatssu-dev

      - name: 개발 서버에 배포
        uses: appleboy/ssh-action@master
        id: deploy-dev
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ${{ secrets.USERNAME }}
          port: 22
          key: ${{ secrets.DEV_PRIVATE_KEY }}
          script: |
            sudo docker ps
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/eatssu-dev
            sudo docker run -d -p 9000:9000 \
            -e EATSSU_DB_URL_DEV="${{ secrets.EATSSU_DB_URL_DEV }}" \
            -e EATSSU_DB_USERNAME="${{ secrets.EATSSU_DB_USERNAME }}" \
            -e EATSSU_DB_PASSWORD="${{ secrets.EATSSU_DB_PASSWORD }}" \
            -e EATSSU_JWT_SECRET_DEV="${{ secrets.EATSSU_JWT_SECRET_DEV }}" \
            -e EATSSU_AWS_ACCESS_KEY_DEV="${{ secrets.EATSSU_AWS_ACCESS_KEY_DEV }}" \
            -e EATSSU_AWS_SECRET_KEY_DEV="${{ secrets.EATSSU_AWS_SECRET_KEY_DEV }}" \
            -e EATSSU_SLACK_TOKEN="${{ secrets.EATSSU_SLACK_TOKEN }}" \
            ${{ secrets.DOCKER_REPO }}/eatssu-dev
            sudo docker image prune -f
