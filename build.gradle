plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

group = 'ssu'
version = '0.0.1-SNAPSHOT'

bootJar {
    archivesBaseName = 'EatSsu'
    archiveFileName = 'eat-ssu.jar'
    archiveVersion = "0.0.1"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'

    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.mysql:mysql-connector-j'
    testRuntimeOnly 'com.mysql:mysql-connector-j'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3-alpha1'

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    implementation("com.slack.api:bolt:1.35.0")
    implementation("com.slack.api:bolt-servlet:1.35.0")
    implementation("com.slack.api:bolt-jetty:1.35.0")
    implementation("org.slf4j:slf4j-simple:1.7.36")

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
}

tasks.named('test') {
    useJUnitPlatform()
}

def generated = 'src/main/generated'

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
    options.compilerArgs += ['-parameters']
}

sourceSets {
    main.java.srcDirs += [generated]
}

clean {
    delete file('src/main/generated')
}
